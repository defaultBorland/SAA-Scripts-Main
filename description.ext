#include "GUI\Base_Classes.hpp"
#include "GUI\ListNBox_dialog.h"
#include "GUI\TeamManagement\Menu_dialog.h"
#include "GUI\ModsApproval\Menu_dialog.h"

briefingName = "SAA Server";
onLoadName = "SAA Project [DEV]";
//loadScreen 		= "img\logo.jpg";
respawn = 3;
respawnDelay = 120;
respawnButton = 0;
respawnOnStart = -1;
respawnTemplates[] = {"MenuPosition", "Spectator", "Tickets"}; // "Spectator" "Wave"
saving = 0;
disabledAI = 1;
enableDebugConsole[] = {"76561198066438612"};
debriefing = 0;
allowProfileGlasses = 0;
zeusCompositionScriptLevel = 2;
// skipLobby = 1;

//Function library definitions
class CfgFunctions
{
	class Shadec_db_client {
		class Database_client {
			class loadInventory {};
			class saveInventory {};
			class loadStorage {};
			class saveStorage {};
            class loadPlayer {};
            class savePlayer {};
			class saveModlist {};
			class createDeadRecord {};
			class updateDeadRecord {};
			class loadRespawnInventory {};
        };
	};

	class Shadec_db_server {
		class Database_server {
			class loadInventory {};
			class saveInventory {};
			class loadStorage {};
			class saveStorage {};
			class loadPlayer {};
			class savePlayer {};
			class saveModlist {};
			class getOrders {};
			class eraseOrders {};
			class changeClasses {};

			class createConnectionRecord {};
			class updateConnectionRecord {};

			class createDeadRecord {};
			class updateDeadRecord {};
			class loadRespawnInventory {};
			class getRespawnTime {};

			class processExtensionReturn {};
			class processMultipartMsg {};
			class getCommandingStats {};

			class createMission {};
			class endMission {};

			class blacklistMod {};
			class getBlacklistedMods {};
			class whitelistMod {};
			class getWhitelistedMods {};

			class getUniform {};
			class getAvailiableItems {};
			class getGarageVehicles {};

		};
	};

    class Shadec {

		class Arsenal {
			class addArsenalSpecificItems {};
			class addShadecArsenal {};
			class removeShadecArsenal {};
			class hideBottomButtons {};
			class toggleLeftPanel {};
			class hideLeftPanelButtons {};
			class hideRightPanel {};
			class gearList {};
			class addCapacityTooltips {};
			class repositionArsenalButtons {};
		};
		class Fuel {
			class setStationsFuel {};
			class spawnCanister {};
		};
		class Fortify {
			class setFortifySettings {};
			class assignFortifySupply {};
			class addFortifyArea {};
			class removeFortifyArea {};
			class drawArea {};
		};
		class Gameplay {
			class endMission {};
			class playersList {};
			class respawnTeleport {};
			class rolesAssign {};
			class showTickets {};
			class showUserInfo {};
			class selectRandomLoadout {};
			class randomCommanders {};
			class selectPlayerFitGroup {};
		};
		class Generic {
			class classSwitcher {};
			class clearContainerInventory {};
			class getContainerInventory {};
			class setContainerInventory {};
			class createLogServer {};
			class getPlayers {};
			class parseOrder {};
			class removeInventoryRestrictedItems {};
			class objectHasInventory {};
			class sortByRank {};
			class getPlayer {};
			class isStringNumberValid {};
			class leftPad {};
			class rightPad {};
			class sumArray {};
		};
		class Headless {
			class getHeadlessInfo {};
			class determineBestOwner {};
			class transferGroupOwnership {};
			class transferVehicleOwnership {};
			class vehicleRandomize {};
		};
		class Moderation {
			class checkRestrictedMods {};
			class getModList {};
			class getShadecBoxAddons {};
			class validateShadecBoxContent {};
			class processModlist {};
			class initPenalty {};
			class kickRestrictedMods {};
		};
		class Navigation {
			class markerTracking {};
			class renderMarker {};
			class hasNavigationItem {};
			class toggleGPS {};
			class toggleMicroDAGR {};
		};
		class Radio {
			class assignJammer {};
			class objectJamming {};
			class replaceVehicleRadio {};
			class radioSignalQuality {};
			class reassignUnitRadios {};
			class savePlayerRadioSettings {};
			class loadPlayerRadioSettings {};
		};
		class Respawn {
			class assignFob {};
			class changeRespawnTickets {};
			class createRespawnPoint {};
			class forcedRespawn {};
			class removeFob {};
			class removeRespawnPoint {};
		};
		class Storage {
			class addActionToStorage {};
			class addToStorage {};
			class assignStorage {};
			class calcStorageSize {};
			class composeAvailiableItems {};
			class createStorage {};
			class deleteStorage {};
			class getCargoCompat {};
			class initStorage {};
			class removeActionFromStorage {};
			class removedItemsListDisplay {};
			class removeStorage {};
			class isItemAllowed {};
			class removeStorageRestrictedItems {};
			class restrictStorageAccess {};
			class getStorageInventory {};
		};
		class Zeus {
			class addContextActions {};
			class addZeusModules {};
			class manageCurators {};
			class promoteToZeus {};
		};
		class GUI {
			class getComboListRows {};
			class nulifyListNBoxRow {};

			class fillListNBox {file = "GUI\fn_fillListNBox.sqf";};

			class fillGroupListNBox {file = "GUI\TeamManagement\fn_fillGroupListNBox.sqf";};
			class refreshPanel {file = "GUI\TeamManagement\fn_refreshPanel.sqf";};
			class getGroups {file = "GUI\TeamManagement\fn_getGroups.sqf";};

			class refreshPanelMA {file = "GUI\ModsApproval\fn_refreshPanel.sqf";};
			class MA_addModToWhitelisted {file = "GUI\ModsApproval\fn_addModToWhitelisted.sqf";};
			class MA_addModToBlacklisted {file = "GUI\ModsApproval\fn_addModToBlacklisted.sqf";};
		};
		class Mechanics {
			class getPlayersByGroupState {file = "Mechanics\TeamManagement\fn_getPlayersByGroupState.sqf";};
			class showGarageVehicles {file = "Mechanics\ShowGarageVehicles\fn_showGarageVehicles.sqf";};
			class showServerFps {file = "Mechanics\Zeus\ShowServerFps\fn_showServerFps.sqf";};
		};
		class ZeusContextMenu {
			class spawnVehicle {file = "ZeusContextMenu\Garage\fn_spawnVehicle.sqf";};
			class applyLoadout {file = "ZeusContextMenu\Garage\fn_applyLoadout.sqf";};
		};
    };
};

//Remote execution config
class CfgRemoteExec
{
    class Functions {
		mode = 2;
		jip = 1;
		class BIS_fnc_debugConsoleExec {allowedTargets = 0;};
    };
};

class CfgDebriefing
{  
	class Win {
		title = "$STR_SAA_DEBRIEFING_WIN_TITLE";
		subtitle = "$STR_SAA_DEBRIEFING_WIN_SUBTITLE";
		description = "";
		picture = "\A3\UI_F\data\IGUI\Cfg\HoldActions\holdAction_thumbsUp_ca";
		pictureColor[] = {0.1,0.6,0.2,1};
	};

	class Lose {
		title = "$STR_SAA_DEBRIEFING_LOSE_TITLE";
		subtitle = "$STR_SAA_DEBRIEFING_LOSE_SUBTITLE";
		description = "";
		picture = "\A3\UI_F\data\IGUI\Cfg\HoldActions\holdAction_thumbsDown_ca";
		pictureColor[] = {0.6,0.1,0.2,1};
	};

	class toBeContinued {
		title = "$STR_SAA_DEBRIEFING_TO_BE_CONTINUED_TITLE";
		subtitle = "$STR_SAA_DEBRIEFING_TO_BE_CONTINUED_SUBTITLE";
		description = "";
		picture = "\A3\UI_F\data\Map\Diary\Icons\unitGroupPlayable_ca.paa";
		pictureColor[] = {1,1,1,1};
	};

	class allDead {
		title = "$STR_SAA_DEBRIEFING_ALL_DEAD_TITLE";
		subtitle = "$STR_SAA_DEBRIEFING_ALL_DEAD_SUBTITLE";
		description = "";
		picture = "\A3\UI_F\data\GUI\Cfg\Debriefing\endDeath_ca";
		pictureColor[] = {0.6,0.1,0.2,1};
	};

	class missingMap {
		title = "$STR_SAA_DEBRIEFING_MISSING_MAP_TITLE";
		subtitle = "$STR_SAA_DEBRIEFING_MISSING_MAP_SUBTITLE";
		description = "$STR_SAA_DEBRIEFING_MISSING_MAP_DESCRIPTION";
		picture = "\A3\UI_F\data\GUI\Cfg\Debriefing\endDefault_ca";
		pictureColor[] = {0.6,0.1,0.2,1};
	};

	class missingMapDependencies {
		title = "$STR_SAA_DEBRIEFING_MISSING_MAP_DEPENDENCIES_TITLE";
		subtitle = "$STR_SAA_DEBRIEFING_MISSING_MAP_DEPENDENCIES_SUBTITLE";
		description = "$STR_SAA_DEBRIEFING_MISSING_MAP_DEPENDENCIES_DESCRIPTION";
		picture = "\A3\UI_F\data\GUI\Cfg\Debriefing\endDefault_ca";
		pictureColor[] = {0.6,0.1,0.2,1};
	};

	class addonsMismatch {
		title = "$STR_SAA_DEBRIEFING_SAABOX_ADDONS_MISMATCH_TITLE";
		subtitle = "$STR_SAA_DEBRIEFING__SAABOX_ADDONS_MISMATCH_SUBTITLE";
		description = "$STR_SAA_DEBRIEFING_SAABOX_ADDONS_MISMATCH_DESCRIPTION";
		picture = "\A3\Modules_F_Curator\Data\portraitObjective_ca";
		pictureColor[] = {0.6,0.1,0.2,1};
	};

	class somethingWentWrong {
		title = "$STR_SAA_DEBRIEFING_SOMETHING_WENT_WRONG_TITLE";
		subtitle = "$STR_SAA_DEBRIEFING_SOMETHING_WENT_WRONG_SUBTITLE";
		description = "$STR_SAA_DEBRIEFING_SOMETHING_WENT_WRONG_DESCRIPTION";
		picture = "\A3\UI_F\data\GUI\Cfg\Hints\Doors_ca";
		pictureColor[] = {1,1,1,1};
	};

	class restrictedModsFound {
		title = "$STR_SAA_DEBRIEFING_SOMETHING_WENT_WRONG_TITLE";
		subtitle = "$STR_SAA_DEBRIEFING_SOMETHING_WENT_WRONG_SUBTITLE";
		description = "$STR_SAA_DEBRIEFING_SOMETHING_WENT_WRONG_DESCRIPTION";
		picture = "\A3\UI_F\data\GUI\Cfg\Hints\Doors_ca";
		pictureColor[] = {1,1,1,1};
	};

	class promotedToZeus {
		title = "$STR_SAA_DEBRIEFING_PROMOTED_TO_ZEUS_TITLE";
		subtitle = "$STR_SAA_DEBRIEFING_PROMOTED_TO_ZEUS_SUBTITLE";
		description = "$STR_SAA_DEBRIEFING_PROMOTED_TO_ZEUS_DESCRIPTION";
		picture = "\A3\UI_F\data\GUI\Cfg\Hints\Zeus_ca";
		pictureColor[] = {1,1,1,1};
	};
};

disableChannels[] = {
	{ 0, false, true },
	{ 1, false, true },
	{ 2, true, true },
	{ 3, true, true },
	{ 4, true, true },
	{ 5, true, false },
	{ 6, false, true }
};

class CfgCommands {
	allowedHTMLLoadURIs[] = {
		"https://steamcommunity.com/sharedfiles/filedetails/?id=*",
		"steamcommunity.com/sharedfiles/*"
	};
};